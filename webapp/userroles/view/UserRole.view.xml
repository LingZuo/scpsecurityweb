<mvc:View controllerName="sap.security.userroles.controller.UserRole" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:mvc="sap.ui.core.mvc"
	displayBlock="true" xmlns="sap.m" xmlns:l="sap.ui.layout" xmlns:core="sap.ui.core" xmlns:table="sap.ui.table"
	xmlns:cfb="sap.security.core.control" xmlns:fb="sap.ui.comp.filterbar">
	<Page id="idUserRoleManagementPage" title="{i18n>appUserRolesTitle}" class="pageDesktop" showHeader="false">
		<content>
			<l:VerticalLayout width="100%">
				<cfb:FilterBar id="idFilterBar" header="{i18n>filterHeader}" search="onhandleSearchEmployees" showGoOnFB="false" showFilterConfiguration="false" reset="onHandleResetFB"
					filterBarExpanded="false">
					<cfb:filterItems>
						<fb:FilterItem name="EmployeeNumber" label="{i18n>employeeNumber}:">
							<fb:control>
								<Input placeholder="{i18n>searchPlaceHolder}"/>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="Email" label="{i18n>email}:">
							<fb:control>
								<Input placeholder="{i18n>searchPlaceHolder}"/>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="LoginName" label="{i18n>loginName}:">
							<fb:control>
								<Input placeholder="{i18n>searchPlaceHolder}"/>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="FirstName" label="{i18n>firstName}:">
							<fb:control>
								<Input placeholder="{i18n>searchPlaceHolder}"/>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="LastName" label="{i18n>lastName}:">
							<fb:control>
								<Input placeholder="{i18n>searchPlaceHolder}"/>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="MobileNumber" label="{i18n>mobileNumber}:">
							<fb:control>
								<Input placeholder="{i18n>searchPlaceHolder}"/>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="gender" label="{i18n>gender}:">
							<fb:control>
								<ComboBox id="idUserGenderSelection" items="{ path: 'PageEnumsModel>/Gender/', sorter:{path:'value'} }" placeholder="{i18n>selectPlaceHolder}">
									<core:Item text="{PageEnumsModel>value}" key="{PageEnumsModel>value}"/>
								</ComboBox>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="type" label="{i18n>type}:">
							<fb:control>
							<ComboBox id="idUserTypeSelection"
							items="{ path: 'PageEnumsModel>/UserType/', sorter:{path:'value'} }" placeholder="{i18n>selectPlaceHolder}">
							<core:Item text="{PageEnumsModel>value}" key="{PageEnumsModel>value}"/>
						</ComboBox>
							</fb:control>
						</fb:FilterItem>
						<fb:FilterItem name="status" label="{i18n>status}:">
							<fb:control>
								<ComboBox id="idUserStatusSelection" 
							items="{ path: 'PageEnumsModel>/UserStatus/', sorter:{path:'value'} }" placeholder="{i18n>selectPlaceHolder}">
							<core:Item text="{PageEnumsModel>value}" key="{PageEnumsModel>value}"/>
						</ComboBox>
							</fb:control>
						</fb:FilterItem>
					</cfb:filterItems>
				</cfb:FilterBar>
			</l:VerticalLayout>
			<l:VerticalLayout>
				<table:Table id="idUserRolesTable" rows="{userRoles>/}" selectionMode="MultiToggle" ariaLabelledBy="title"
					rowSelectionChange="onHandleUserRowSelectionChange" class="sapUiMediumMargin">
					<table:toolbar>
						<Toolbar>
							<Title id="idUserRolesTableTitle" text="{i18n>items}"></Title>
							<ToolbarSpacer/>
							<Button icon="sap-icon://add-contact" tooltip="{i18n>createUser}" press="onOpenAddUserPopover" visible="{ButtonStateModel>/CreateVisible}"/>
							<Button icon="sap-icon://action-settings" press="onHandleSetting"/>
						</Toolbar>
					</table:toolbar>
					<table:columns>
						<table:Column visible="false">
							<Label text="{i18n>userId}"/>
							<table:template>
								<Link text="{userRoles>id}" press="onNavToDetail" enabled="false"/>
							</table:template>
						</table:Column>
						<table:Column visible="fasle">
							<Label text="{i18n>employeeNumber}"/>
							<table:template>
								<Text text="{userRoles>employeeNumber}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column>
							<Label text="{i18n>loginName}"/>
							<table:template>
								<Link text="{userRoles>loginName}" press="onNavToDetail"/>
							</table:template>
						</table:Column>
						<table:Column visible="false">
							<Label text="{i18n>lastName}"/>
							<table:template>
								<Text text="{userRoles>lastName}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column visible="false">
							<Label text="{i18n>firstName}"/>
							<table:template>
								<Text text="{userRoles>firstName}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column>
							<Label text="{i18n>gender}"/>
							<table:template>
								<Text text="{userRoles>gender}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column visible="false">
							<Label text="{i18n>mobileNumber}"/>
							<table:template>
								<Text text="{userRoles>mobile}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column>
							<Label text="{i18n>email}"/>
							<table:template>
								<Text text="{userRoles>email}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column>
							<Label text="{i18n>roleState}"/>
							<table:template>
								<Text text="{path: 'userRoles>roleSet', formatter: '.formatter.formatEmployeeRole'}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column>
							<Label text="{i18n>status}"/>
							<table:template>
								<Text text="{userRoles>status}" wrapping="false"/>
							</table:template>
						</table:Column>
						<table:Column>
							<Label text="{i18n>type}"/>
							<table:template>
								<Text text="{userRoles>type}" wrapping="false"/>
							</table:template>
						</table:Column>
					</table:columns>
				</table:Table>
			</l:VerticalLayout>
		</content>
		<footer>
			<OverflowToolbar>
				<ToolbarSpacer/>
				<Button text="{i18n>assign}" press="onHandleAssign" enabled="{ButtonStateModel>/AssignButtonState}"
					visible="{ButtonStateModel>/updateVisible}"/>
				<Button text="{i18n>delete}" press="onHandleDelete" enabled="{ButtonStateModel>/DeleteButtonState}"
					visible="{ButtonStateModel>/deleteVisible}"/>
			</OverflowToolbar>
		</footer>
	</Page>
</mvc:View>